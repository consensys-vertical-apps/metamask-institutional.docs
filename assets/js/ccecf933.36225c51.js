"use strict";(self.webpackChunkdocs_template=self.webpackChunkdocs_template||[]).push([[574],{3256:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var i=n(5893),a=n(1151);const s={sidebar_position:1,description:"Build and host a REST web service that connects your system with MetaMask Institutional."},r="1. What is a Connector?",o={id:"staking/integrating-via-a-connector/create-an-adapter-rest-api",title:"1. What is a Connector?",description:"Build and host a REST web service that connects your system with MetaMask Institutional.",source:"@site/docs/staking/integrating-via-a-connector/create-an-adapter-rest-api.md",sourceDirName:"staking/integrating-via-a-connector",slug:"/staking/integrating-via-a-connector/create-an-adapter-rest-api",permalink:"/staking/integrating-via-a-connector/create-an-adapter-rest-api",draft:!1,unlisted:!1,editUrl:"https://github.com/Consensys/docs-template/tree/main/docs/staking/integrating-via-a-connector/create-an-adapter-rest-api.md",tags:[],version:"current",lastUpdatedBy:"Xavier Brochard",lastUpdatedAt:1727771833e3,sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Build and host a REST web service that connects your system with MetaMask Institutional."},sidebar:"stakingSidebar",previous:{title:"Integrating via a Connector",permalink:"/category/integrating-via-a-connector"},next:{title:"2. Implement this OpenAPI Spec",permalink:"/staking/integrating-via-a-connector/adapter-openapi"}},c={},d=[{value:"Initiating a stake or batch stake",id:"initiating-a-stake-or-batch-stake",level:2},{value:"Supported EVM networks",id:"supported-evm-networks",level:2},{value:"Implement this OpenAPI specification",id:"implement-this-openapi-specification",level:2}];function h(t){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.a)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"1-what-is-a-connector",children:"1. What is a Connector?"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"MMI Staking"}),' is a web service that "talks" with staking providers through a specific and common REST API, defined by MMI.']}),"\n",(0,i.jsxs)(e.p,{children:["In order for it to talk with your existing API, you need to implement and host a ",(0,i.jsx)(e.strong,{children:"Connector"}),": a REST web service that sits between ",(0,i.jsx)(e.strong,{children:"MMI Staking"})," and ",(0,i.jsx)(e.strong,{children:"your existing API"}),", and that stands as an integration layer."]}),"\n",(0,i.jsx)(e.h2,{id:"initiating-a-stake-or-batch-stake",children:"Initiating a stake or batch stake"}),"\n",(0,i.jsxs)(e.p,{children:["The user initiates a stake or a batch stake from the ",(0,i.jsx)(e.strong,{children:"MetaMask Institutional Portfolio Dashboard"}),". This makes a ",(0,i.jsx)(e.code,{children:"POST /stakes"})," to ",(0,i.jsx)(e.strong,{children:"MMI Staking"}),", it forwards the request to your ",(0,i.jsx)(e.strong,{children:"Connector"}),", that then calls your existing API, in order to build and return the deposit payload (the transaction data)."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"Initiating a stake",src:n(762).Z+"",width:"1707",height:"247"})}),"\n",(0,i.jsxs)(e.p,{children:["Once the dashboard receives the deposit payload, it opens it in the ",(0,i.jsx)(e.strong,{children:"MetaMask Institutional extension"})," via a JSON-RPC call, for the user to confirm and send to its custodian. More details about this flow ",(0,i.jsx)(e.a,{href:"https://docs.metamask-institutional.io/custodian-integration/integration-docs/architecture/",children:"here"}),"."]}),"\n",(0,i.jsx)(e.h2,{id:"supported-evm-networks",children:"Supported EVM networks"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["In ",(0,i.jsx)(e.strong,{children:"production"}),", your ",(0,i.jsx)(e.strong,{children:"Connector"})," must support ",(0,i.jsx)(e.strong,{children:"Ethereum Mainnet"})," (ChainID ",(0,i.jsx)(e.strong,{children:"1"}),") only."]}),"\n",(0,i.jsxs)(e.li,{children:["In ",(0,i.jsx)(e.strong,{children:"development"}),", your ",(0,i.jsx)(e.strong,{children:"Connector"})," must support ",(0,i.jsx)(e.strong,{children:"Holesky"})," (ChainID ",(0,i.jsx)(e.strong,{children:"17000"}),") only."]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"implement-this-openapi-specification",children:"Implement this OpenAPI specification"}),"\n",(0,i.jsxs)(e.p,{children:["To be compatible with ",(0,i.jsx)(e.strong,{children:"MMI Staking"}),", your ",(0,i.jsx)(e.strong,{children:"Connector"})," must support the above features, and expose them through this ",(0,i.jsx)(e.a,{href:"./adapter-openapi",children:"OpenAPI Specification"}),"."]})]})}function l(t={}){const{wrapper:e}={...(0,a.a)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(h,{...t})}):h(t)}},762:(t,e,n)=>{n.d(e,{Z:()=>i});const i=n.p+"assets/images/initiating-a-stake-f8b6169fd8d1a232695e8b5372716e36.png"},1151:(t,e,n)=>{n.d(e,{Z:()=>o,a:()=>r});var i=n(7294);const a={},s=i.createContext(a);function r(t){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:r(t.components),i.createElement(s.Provider,{value:e},t.children)}}}]);