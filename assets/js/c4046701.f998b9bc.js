"use strict";(self.webpackChunkdocs_template=self.webpackChunkdocs_template||[]).push([[255],{99299:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"custodiansSidebar":[{"type":"link","label":"Some title","href":"/metamask-institutional.docs/custodians/","docId":"custodians/index","unlisted":false}],"stakingProvidersSidebar":[{"type":"link","label":"Introduction","href":"/metamask-institutional.docs/staking-providers/","docId":"staking-providers/index","unlisted":false},{"type":"link","label":"Definitions","href":"/metamask-institutional.docs/staking-providers/definitions","docId":"staking-providers/definitions","unlisted":false},{"type":"category","label":"Integrating via a Connector","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"1. What is a Connector?","href":"/metamask-institutional.docs/staking-providers/integrating-via-a-connector/create-an-adapter-rest-api","docId":"staking-providers/integrating-via-a-connector/create-an-adapter-rest-api","unlisted":false},{"type":"link","label":"2. Implement this OpenAPI Spec","href":"/metamask-institutional.docs/staking-providers/integrating-via-a-connector/staking-connector","docId":"staking-providers/integrating-via-a-connector/staking-connector","unlisted":false},{"type":"link","label":"3. Configure Authentication","href":"/metamask-institutional.docs/staking-providers/integrating-via-a-connector/authentication","docId":"staking-providers/integrating-via-a-connector/authentication","unlisted":false},{"type":"link","label":"4. Keep your Connector healthy","href":"/metamask-institutional.docs/staking-providers/integrating-via-a-connector/register-your-api","docId":"staking-providers/integrating-via-a-connector/register-your-api","unlisted":false},{"type":"link","label":"5. [Optional] Use the boilerplate","href":"/metamask-institutional.docs/staking-providers/integrating-via-a-connector/boilerplate","docId":"staking-providers/integrating-via-a-connector/boilerplate","unlisted":false},{"type":"link","label":"6. It works when...","href":"/metamask-institutional.docs/staking-providers/integrating-via-a-connector/it-works-if","docId":"staking-providers/integrating-via-a-connector/it-works-if","unlisted":false}],"href":"/metamask-institutional.docs/category/integrating-via-a-connector"},{"type":"link","label":"Staking service fees","href":"/metamask-institutional.docs/staking-providers/fees","docId":"staking-providers/fees","unlisted":false},{"type":"link","label":"Data Sources","href":"/metamask-institutional.docs/staking-providers/data-sources","docId":"staking-providers/data-sources","unlisted":false}],"defiDevelopersSidebar":[{"type":"link","label":"Introduction","href":"/metamask-institutional.docs/defi-developers/","docId":"defi-developers/index","unlisted":false},{"type":"category","label":"How to","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Build an adapter","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"1. Set up","href":"/metamask-institutional.docs/defi-developers/how-to/build-an-adapter/set-up","docId":"defi-developers/how-to/build-an-adapter/set-up","unlisted":false},{"type":"link","label":"2. Run the CLI","href":"/metamask-institutional.docs/defi-developers/how-to/build-an-adapter/run-the-cli","docId":"defi-developers/how-to/build-an-adapter/run-the-cli","unlisted":false},{"type":"link","label":"3. Inspect your new adapter","href":"/metamask-institutional.docs/defi-developers/how-to/build-an-adapter/inspect-your-new-adapter","docId":"defi-developers/how-to/build-an-adapter/inspect-your-new-adapter","unlisted":false},{"type":"link","label":"4. Build classes from ABIs","href":"/metamask-institutional.docs/defi-developers/how-to/build-an-adapter/build-classes-from-abis","docId":"defi-developers/how-to/build-an-adapter/build-classes-from-abis","unlisted":false},{"type":"link","label":"5. Build metadata files","href":"/metamask-institutional.docs/defi-developers/how-to/build-an-adapter/build-metadata","docId":"defi-developers/how-to/build-an-adapter/build-metadata","unlisted":false},{"type":"link","label":"6. Fill code gaps","href":"/metamask-institutional.docs/defi-developers/how-to/build-an-adapter/fill-gaps","docId":"defi-developers/how-to/build-an-adapter/fill-gaps","unlisted":false},{"type":"link","label":"7. Validate with dev UI","href":"/metamask-institutional.docs/defi-developers/how-to/build-an-adapter/dev-ui","docId":"defi-developers/how-to/build-an-adapter/dev-ui","unlisted":false},{"type":"link","label":"8. Create snapshot tests","href":"/metamask-institutional.docs/defi-developers/how-to/build-an-adapter/create-snapshot-tests","docId":"defi-developers/how-to/build-an-adapter/create-snapshot-tests","unlisted":false},{"type":"link","label":"9. Pull Request","href":"/metamask-institutional.docs/defi-developers/how-to/build-an-adapter/pull-request","docId":"defi-developers/how-to/build-an-adapter/pull-request","unlisted":false}],"description":"Steps to build an adapter for your DeFi protocol","href":"/metamask-institutional.docs/category/build-an-adapter"}],"href":"/metamask-institutional.docs/category/how-to"}]},"docs":{"api/index":{"id":"api/index","title":"Web API","description":""},"custodians/index":{"id":"custodians/index","title":"Some title","description":"Connect your custody system to MetaMask Institutional, enabling users to sign transactions directly through your platform.","sidebar":"custodiansSidebar"},"defi-developers/how-to/build-an-adapter/build-classes-from-abis":{"id":"defi-developers/how-to/build-an-adapter/build-classes-from-abis","title":"4. Build classes from ABIs","description":"If your adapter requires implementations that rely on on-chain queries to your protocol\'s smart contracts, you\'ll need to import ABIs to create factories for type-safe interaction with those contracts.","sidebar":"defiDevelopersSidebar"},"defi-developers/how-to/build-an-adapter/build-metadata":{"id":"defi-developers/how-to/build-an-adapter/build-metadata","title":"5. Build metadata files","description":"Upon inspecting the adapter start by filling details for the following methods","sidebar":"defiDevelopersSidebar"},"defi-developers/how-to/build-an-adapter/create-snapshot-tests":{"id":"defi-developers/how-to/build-an-adapter/create-snapshot-tests","title":"8. Create snapshot tests","description":"Overview","sidebar":"defiDevelopersSidebar"},"defi-developers/how-to/build-an-adapter/dev-ui":{"id":"defi-developers/how-to/build-an-adapter/dev-ui","title":"7. Validate with dev UI","description":"The command npm run dev that you\'ve launched at 1. Set up also runs a dev UI at http5173/. This allows you to visually check user positions and view the raw JSON data for debugging. Simply enter an Ethereum address and filter by the protocol you\'re working on to see the relevant data.","sidebar":"defiDevelopersSidebar"},"defi-developers/how-to/build-an-adapter/fill-gaps":{"id":"defi-developers/how-to/build-an-adapter/fill-gaps","title":"6. Fill code gaps","description":"Check if the following methods need to be implemented or code has already been added based on the CLI questions:","sidebar":"defiDevelopersSidebar"},"defi-developers/how-to/build-an-adapter/inspect-your-new-adapter":{"id":"defi-developers/how-to/build-an-adapter/inspect-your-new-adapter","title":"3. Inspect your new adapter","description":"--\x3e","sidebar":"defiDevelopersSidebar"},"defi-developers/how-to/build-an-adapter/pull-request":{"id":"defi-developers/how-to/build-an-adapter/pull-request","title":"9. Pull Request","description":"Once you\'re satisfied with the work and its results, run the following command to automatically fix any linting errors and receive a report of those requiring manual attention:","sidebar":"defiDevelopersSidebar"},"defi-developers/how-to/build-an-adapter/run-the-cli":{"id":"defi-developers/how-to/build-an-adapter/run-the-cli","title":"2. Run the CLI","description":"You\'ll be asked a series of questions to describe your DeFi product, such as:","sidebar":"defiDevelopersSidebar"},"defi-developers/how-to/build-an-adapter/set-up":{"id":"defi-developers/how-to/build-an-adapter/set-up","title":"1. Set up","description":"Clone from GitHub the DeFi Adapters Library, install its dependencies, and run the library:","sidebar":"defiDevelopersSidebar"},"defi-developers/index":{"id":"defi-developers/index","title":"Introduction","description":"As a DeFi protocol developer, you can integrate with MetaMask Institutional and MetaMask to display your protocol\'s positions, unclaimed rewards, profit & loss, and performance metrics for users in the MetaMask Institutional Portfolio Dashboard and MetaMask Portfolio:","sidebar":"defiDevelopersSidebar"},"staking-providers/data-sources":{"id":"staking-providers/data-sources","title":"Data Sources","description":"This page provides detailed information about the data sources we use to calculate and display the various Key Performance Indicators (KPIs) in the Portfolio Dashboard. These KPIs, including Uptime and Historical Gross Rewards Rate, are crucial for users to make informed decisions about their staking investments.","sidebar":"stakingProvidersSidebar"},"staking-providers/definitions":{"id":"staking-providers/definitions","title":"Definitions","description":"User","sidebar":"stakingProvidersSidebar"},"staking-providers/fees":{"id":"staking-providers/fees","title":"Staking service fees","description":"How staking fees are calculated","sidebar":"stakingProvidersSidebar"},"staking-providers/index":{"id":"staking-providers/index","title":"Introduction","description":"Users of MetaMask Institutional can stake ETH2.0 on Ethereum Mainnet, directly from the Portfolio Dashboard with MMI Staking and instantly stake with a wide variety of staking providers.","sidebar":"stakingProvidersSidebar"},"staking-providers/integrating-via-a-connector/authentication":{"id":"staking-providers/integrating-via-a-connector/authentication","title":"3. Configure Authentication","description":"Using your existing authentication scheme.","sidebar":"stakingProvidersSidebar"},"staking-providers/integrating-via-a-connector/boilerplate":{"id":"staking-providers/integrating-via-a-connector/boilerplate","title":"5. [Optional] Use the boilerplate","description":"This public GitHub repository contains a mock Nest.js implementation of the OpenAPI Specification, and with sample Authentication.","sidebar":"stakingProvidersSidebar"},"staking-providers/integrating-via-a-connector/create-an-adapter-rest-api":{"id":"staking-providers/integrating-via-a-connector/create-an-adapter-rest-api","title":"1. What is a Connector?","description":"Build and host a REST web service that connects your system with MetaMask Institutional.","sidebar":"stakingProvidersSidebar"},"staking-providers/integrating-via-a-connector/it-works-if":{"id":"staking-providers/integrating-via-a-connector/it-works-if","title":"6. It works when...","description":"... your Connector receives recurrent calls on GET /details from https//staking-middleware.metamask-institutional.io (in prod), and successfully responds to them.","sidebar":"stakingProvidersSidebar"},"staking-providers/integrating-via-a-connector/register-your-api":{"id":"staking-providers/integrating-via-a-connector/register-your-api","title":"4. Keep your Connector healthy","description":"Receive health checks","sidebar":"stakingProvidersSidebar"},"staking-providers/integrating-via-a-connector/staking-connector":{"id":"staking-providers/integrating-via-a-connector/staking-connector","title":"2. Implement this OpenAPI Spec","description":"Your Connector must expose a specific API to be compatible with MetaMask Institutional.","sidebar":"stakingProvidersSidebar"}}}}')}}]);